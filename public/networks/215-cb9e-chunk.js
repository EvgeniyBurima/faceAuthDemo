const t=(t,e)=>t-e,e=(t,e)=>t+e,r=(t,e)=>t%e>1?t-1:-1,n=(t,e)=>(t+1)%e>=0?t+1:-1,a=(e,n)=>r(t(e,n),n),s=(e,r)=>n(t(e,r),r),o=(t,n)=>r(e(t,n),n),c=(t,r)=>n(e(t,r),r),h=(h,i)=>[a,t,s,n,c,e,o,r].map((t=>t(h,i))),d=(t,e)=>{const r=[],n=[],a=t.length;let s,o=0;const c=()=>{const s=e=>e>0&&0!==t[e]&&e<a;for(;r.length;){const a=r.pop();if(!a)break;t[a]=0,n[o].add(a),h(a,e).forEach((t=>{s(t)&&r.push(t)}))}};for(s=0;s<a;s+=1)0!==t[s]&&(n[o]=new Set,r.push(s),c(),o+=1);return n},i=.3,l=(t,e)=>Math.floor(t/e),u=(t,e)=>{return[(r=t,n=e,r%n),l(t,e)];var r,n},m=t=>null!=t,g=(t,e,r)=>{const n=((t,e=120)=>{const r=t.width*t.height,n=new Uint8ClampedArray(r);let a,s=0,o=0,c=0,h=0;for(a=0;a<r;a+=1){const r=a<<2;s=t.data[r+0],o=t.data[r+1],c=t.data[r+2],h=77*s+151*o+28*c>>8,h<e&&(n[a]=1)}return n})(t);return(({segments:t,width:e,scaleWidth:r,scaleHeight:n})=>t.map((t=>{let a=Number.MAX_VALUE,s=Number.MAX_VALUE,o=Number.MIN_VALUE,c=Number.MIN_VALUE;for(const r of t){const t=u(r,e);t[0]<a&&(a=t[0]),t[1]<s&&(s=t[1]),t[0]>o&&(o=t[0]),t[1]>c&&(c=t[1])}const h=(o-a)*(c-s);return h>5&&h<500?{perimeter:h,x1:Math.trunc(a/i/r),y1:Math.trunc(s/i/n),x2:Math.trunc(o/i/r),y2:Math.trunc(c/i/n)}:null})).filter(m))({segments:d(n,t.width),width:t.width,scaleWidth:e,scaleHeight:r})};onmessage=({data:t})=>{const e=g(t.iData,t.resizedToBorderScaleWidth,t.resizedToBorderScaleHeight);postMessage({segments:e})};